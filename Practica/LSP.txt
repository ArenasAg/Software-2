3. Principio de Sustitución de Liskov (LSP - Liskov Substitution Principle)
Descripción:
Las clases derivadas deben poder sustituir a las clases base sin alterar el comportamiento del programa. 
Las instancias de una clase hija deben comportarse como las de la clase padre.


// INCORRECTO: La subclase cambia el comportamiento esperado de la clase padre
class Bird {
    public void fly() {
        System.out.println("Flying");
    }
}

class Ostrich extends Bird {
    @Override
    public void fly() {
        throw new UnsupportedOperationException("Ostrich can't fly");
    }
}

// CORRECTO: Se utiliza una abstracción adecuada para diferenciar entre las aves voladoras y no voladoras
abstract class Bird {
    public abstract void move();
}

class FlyingBird extends Bird {
    @Override
    public void move() {
        System.out.println("Flying");
    }
}

class Ostrich extends Bird {
    @Override
    public void move() {
        System.out.println("Running");
    }
}
